import{s as P,h as q,n as w}from"../chunks/scheduler.46401592.js";import{S as z,i as B,g as a,s as H,h as s,j as r,c as R,x as W,f as n,k as e,l as D,a as F,y as i}from"../chunks/index.a370a49a.js";function G(j){let o,d,h,m,u,v,p,f,c,t,y,x,l,I='<div class="journal-txt"><h2 style="font-size: 24px; font-weight: bold; color: rgb(167, 139, 250); --tw-text-opacity: 1;">SVM Based Classifier for Detection of DDoS in IoT (Research)</h2></div> <p class="mb-30 text-center">The research scope of Distributed Denial of Service (DDoS) cyber-attacks are expansive as DDoS attacks are simple to implement and often result in huge service disruptions. Despite the implementation of several standard defense mechanisms, the attackers still manage to bring the system down. The impact of a DDoS attack on the Internet of Things (IoT) is more severe due to its resource-constraint nature. Existing DDoS attacks are designed to concentrate on exploiting one resource. However, the combination of multiple attacks will have the ability to exploit multiple resources, hence doing more damage to the resources, especially to the CPU computation power.</p> <p class="mb-30 text-center">In this research, Dr. Ganesh Reddy Karri and I have created a new attack by combining two attacks. For this, a client-server model is designed in the Cooja IoT simulator. Cooja running on the Contiki operating system allows developers to run and test their code before implementing them on actual hardware devices. The network communications are implemented using the ICMPv6 protocol. The simulation consists of both Malicious nodes and Non-Malicious nodes hence creating a variation in the dataset (mimicking the real world scenarios).</p> <p class="mb-30 text-center">We utilized Python&#39;s SVM function to train the data and then use the SVM model to predict the test data. To create a categorization chart, we utilized three characteristic values. We have tested the data will all four (linear, RBF, Sigmoid, and poly) SVM kernels and have concluded that the &quot;poly&quot; kernel gives the highest accuracy score. We have further tested out the model with IoT-23-Dataset and have come to the same result. This research is currently under review for publication.</p>';return{c(){o=a("main"),d=a("div"),h=a("div"),m=a("div"),u=a("div"),v=a("div"),p=a("div"),f=a("div"),c=a("div"),t=a("img"),x=H(),l=a("div"),l.innerHTML=I,this.h()},l(g){o=s(g,"MAIN",{id:!0,class:!0});var _=r(o);d=s(_,"DIV",{class:!0});var S=r(d);h=s(S,"DIV",{class:!0});var k=r(h);m=s(k,"DIV",{class:!0});var T=r(m);u=s(T,"DIV",{class:!0});var V=r(u);v=s(V,"DIV",{class:!0});var M=r(v);p=s(M,"DIV",{class:!0});var E=r(p);f=s(E,"DIV",{class:!0});var C=r(f);c=s(C,"DIV",{class:!0});var b=r(c);t=s(b,"IMG",{src:!0,class:!0,style:!0,alt:!0}),x=R(b),l=s(b,"DIV",{class:!0,"data-svelte-h":!0}),W(l)!=="svelte-9nmf2b"&&(l.innerHTML=I),b.forEach(n),C.forEach(n),E.forEach(n),M.forEach(n),V.forEach(n),T.forEach(n),k.forEach(n),S.forEach(n),_.forEach(n),this.h()},h(){q(t.src,y=L)||e(t,"src",y),e(t,"class","img-responsive border rounded-lg mb-4"),D(t,"height","600px"),D(t,"width","auto"),D(t,"left","50%"),D(t,"max-width","100%"),D(t,"border","2px solid #000"),e(t,"alt","SVM Based Classifier for Detection of DDoS in IoT"),e(l,"class","content-main single-post padDiv text-center"),e(c,"class","block-main mb-30 d-flex flex-column align-items-center"),e(f,"class","col-md-12"),e(p,"class","container-main single-main"),e(v,"class","row"),e(u,"class","col-md-8 col-md-offset-2"),e(m,"class","row justify-content-center"),e(h,"class","container"),e(d,"class","main-content paddsection"),e(o,"id","main"),e(o,"class","mt-4")},m(g,_){F(g,o,_),i(o,d),i(d,h),i(h,m),i(m,u),i(u,v),i(v,p),i(p,f),i(f,c),i(c,t),i(c,x),i(c,l)},p:w,i:w,o:w,d(g){g&&n(o)}}}let L="../images/Self pic.png";class K extends z{constructor(o){super(),B(this,o,null,G,P,{})}}export{K as component};
